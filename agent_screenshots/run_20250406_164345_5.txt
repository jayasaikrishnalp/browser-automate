 SystemMessage 
You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.

# Input Format
Task
Previous steps
Current URL
Open Tabs
Interactive Elements
[index]<type>text</type>
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description
Example:
[33]<button>Submit Form</button>

- Only elements with numeric indexes in [] are interactive
- elements without [] provide only context

# Response Rules
1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:
{"current_state": {"evaluation_previous_goal": "Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not",
"memory": "Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz",
"next_goal": "What needs to be done with the next immediate action"},
"action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]}

2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.
Common action sequences:
- Form filling: [{"input_text": {"index": 1, "text": "username"}}, {"input_text": {"index": 2, "text": "password"}}, {"click_element": {"index": 3}}]
- Navigation and extraction: [{"go_to_url": {"url": "https://example.com"}}, {"extract_content": {"goal": "extract the names"}}]
- Actions are executed in the given order
- If the page changes after an action, the sequence is interrupted and you get the new state.
- Only provide the action sequence until an action which changes the page state significantly.
- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page
- only use multiple actions if it makes sense.

3. ELEMENT INTERACTION:
- Only use indexes of the interactive elements
- Elements marked with "[]Non-interactive text" are non-interactive

4. NAVIGATION & ERROR HANDLING:
- If no suitable elements exist, use other functions to complete the task
- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.
- Handle popups/cookies by accepting or closing them
- Use scroll to find elements you are looking for
- If you want to research something, open a new tab instead of using the current tab
- If captcha pops up, try to solve it - else try a different approach
- If the page is not fully loaded, use wait action

5. TASK COMPLETION:
- Use the done action as the last action as soon as the ultimate task is complete
- Dont use "done" before you are done with everything the user asked you, except you reach the last step of max_steps. 
- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!
- If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
- Don't hallucinate actions
- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. 

6. VISUAL CONTEXT:
- When an image is provided, use it to understand the page layout
- Bounding boxes with labels on their top right corner correspond to element indexes

7. Form filling:
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.

8. Long tasks:
- Keep track of the status and subresults in the memory. 

9. Extraction:
- If your task is to find information - call extract_content on the specific pages to get and store the information.
Your responses must be always JSON with the specified format.

 HumanMessage 
Your ultimate task is: """Navigate to Google.com
[SCREENSHOT: Google Homepage - google_home.png]

Search for "browser automation using AI"
[SCREENSHOT: Search Results - search_results.png]

Click on one of the relevant results about AI and browser automation
[SCREENSHOT: Article Page - article.png]

Scroll down to read more about the topic
[SCREENSHOT: More Content - more_content.png]""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üîó  Navigated to https://www.google.com

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ‚å®Ô∏è  Input browser automation using AI into index 10

 HumanMessage 
Action result: Something new appeared after action 1 / 2

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: üñ±Ô∏è  Clicked button with index 15:

 HumanMessage 
[Task history memory ends]
[Current state starts here]
The following is one-time information - if you need to remember it write it to memory:
Current url: https://www.google.com/search?q=browser+automation+using+ai&sca_esv=60fc72c6afa20bbd&source=hp&ei=9mHyZ_GjHdLR1e8P9aj2qQ8&iflsig=ACkRmUkAAAAAZ_JwBqluNkRq4RuOB2EqWOHAFBRm8Oa4&oq=browser+automation+using+AI&gs_lp=Egdnd3Mtd2l6Ihticm93c2VyIGF1dG9tYXRpb24gdXNpbmcgQUkqAggAMgUQABiABDILEAAYgAQYhgMYigUyCxAAGIAEGIYDGIoFMggQABiABBiiBDIFEAAY7wUyCBAAGIAEGKIEMggQABiiBBiJBTIFEAAY7wVIjFVQAFgAcAB4AJABAJgBeqABeqoBAzAuMbgBAcgBAPgBAZgCAaACf5gDAJIHAzAuMaAHpgWyBwMwLjG4B38&sclient=gws-wiz&sei=CWLyZ46BMfaf4-EPl-SsoQo
Available tabs:
[TabInfo(page_id=0, url='https://www.google.com/search?q=browser+automation+using+ai&sca_esv=60fc72c6afa20bbd&source=hp&ei=9mHyZ_GjHdLR1e8P9aj2qQ8&iflsig=ACkRmUkAAAAAZ_JwBqluNkRq4RuOB2EqWOHAFBRm8Oa4&oq=browser+automation+using+AI&gs_lp=Egdnd3Mtd2l6Ihticm93c2VyIGF1dG9tYXRpb24gdXNpbmcgQUkqAggAMgUQABiABDILEAAYgAQYhgMYigUyCxAAGIAEGIYDGIoFMggQABiABBiiBDIFEAAY7wUyCBAAGIAEGKIEMggQABiiBBiJBTIFEAAY7wVIjFVQAFgAcAB4AJABAJgBeqABeqoBAzAuMbgBAcgBAPgBAZgCAaACf5gDAJIHAzAuMaAHpgWyBwMwLjG4B38&sclient=gws-wiz&sei=CWLyZ46BMfaf4-EPl-SsoQo', title='browser automation using ai - Google Search')]
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
Accessibility links
Skip to main content
Accessibility help
Accessibility feedback
[0]<a Go to Google Home/>
[1]<textarea ;Search;false;q;combobox>browser automation using ai/>
[2]<div button;Clear/>
[3]<div button;Search by voice/>
[4]<div button;Search by image/>
[5]<button submit;Search/>
[6]<div button;Settings>Quick Settings/>
[7]<a button;false;Google apps/>
[8]<a Sign in/>
Filters and topics
[9]<a link>All/>
[10]<a link>Videos/>
[11]<a link>Images/>
[12]<a link>News/>
[13]<a link>Short videos/>
[14]<a link>Forums/>
[15]<a link>Shopping/>
[16]<div button;false>More/>
[17]<div button;false>Tools/>
Search Results
[18]<a No code browser automation & web scraping | axiom.ai
Axiom.ai
https://axiom.ai/>
[19]<img />
[20]<div button;About this result/>
Build
browser
bots quickly, without code.
Automate
website actions and repetitive tasks
using
just your
browser
, on any website or
web
app.
[21]<a AI/>
[22]<a Automation templates/>
[23]<a First automation/>
[24]<a Browser actions/>
[25]<a Skyvern-AI/skyvern: Automate browser-based workflows ...
GitHub
https://github.com
‚Ä∫ Skyvern-AI ‚Ä∫ skyvern/>
[26]<img />
[27]<div button;About this result/>
Skyvern automates browser-based workflows
using LLMs and computer vision. It provides a simple API endpoint to fully automate manual workflows on a large number¬†...
[28]<a **The Ultimate Guide to AI-Powered Browser Automation ...
Hugging Face
https://huggingface.co
‚Ä∫ blog ‚Ä∫ luigi12345 ‚Ä∫ ai-scraping-.../>
[29]<img />
[30]<div button;About this result/>
19 Nov 2024
‚Äî
This comprehensive guide explores some of the most prominent
AI-powered tools for browser automation
and web scraping, sorted by popularity.
Videos
[31]<div button;About this result/>
[32]<a button;Browser Use: FREE AI Agent CAN CONTROL BROWSERS & ... by WorldofAI on YouTube. Play on Google. 9:55. 6 Jan 2025>9:55/>
[33]<a Browser Use: FREE AI Agent CAN CONTROL BROWSERS & ... by WorldofAI on YouTube. Play on YouTube. 9:55. 6 Jan 2025>Browser Use: FREE AI Agent CAN CONTROL BROWSERS & ...
YouTube
¬∑
WorldofAI
6 Jan 2025/>
[34]<a button;How to create your own Browser AI Agent using any LLM ... by Naveen AutomationLabs on YouTube. Play on Google. 23:34. 4 Feb 2025>23:34/>
[35]<a How to create your own Browser AI Agent using any LLM ... by Naveen AutomationLabs on YouTube. Play on YouTube. 23:34. 4 Feb 2025>How to create your own Browser AI Agent using any LLM ...
YouTube
¬∑
Naveen AutomationLabs
4 Feb 2025/>
[36]<a button;Automate Your Browser with AI! Build a Computer Using ... by Leon van Zyl on YouTube. Play on Google. 31:56. 3 days ago>31:56/>
[37]<a Automate Your Browser with AI! Build a Computer Using ... by Leon van Zyl on YouTube. Play on YouTube. 31:56. 3 days ago>Automate Your Browser with AI! Build a Computer Using ...
YouTube
¬∑
Leon van Zyl
3 days ago/>
[38]<a View all/>
New AI Browser Agent Can Automate Almost Anything
Medium¬†¬∑¬†Christopher Kokoski
20+ likes  ¬∑  3 months ago
[39]<div button;About this result/>
It's a Chrome extension. The tool calls itself ‚Äúan
AI
agent that lives in your
browser
and can perform tasks for you.‚Äù That's a better, snappier description.
[40]<a Bardeen: Automate Browser Apps with AI - Chrome Web Store
Chrome Web Store
https://chromewebstore.google.com
‚Ä∫ detail ‚Ä∫ ihhkmalp.../>
[41]<img />
[42]<div button;About this result/>
Bardeen.ai uses a ChatGPT-style AI chatbot that can
automatically generate custom automations
. Creating automation is now possible with simple language. Use the¬†...
[43]<a How It Works
Browse AI
https://www.browse.ai
‚Ä∫ how-it-works/>
[44]<img />
[45]<div button;About this result/>
Browse AI
is the first AI-powered web automation software that learns to perform data extraction, monitoring, and automation tasks on the web.
People also ask
[46]<div button;About this result/>
[47]<div button;false>Can AI be used for automation?/>
... 1865 pixels below - scroll or extract content to see more ...
Current step: 4/100Current date and time: 2025-04-06 16:44

 RESPONSE
{
  "current_state": {
    "evaluation_previous_goal": "Success - I have successfully searched for 'browser automation using AI' on Google and can now see the search results page with various relevant links and information about browser automation using AI.",
    "memory": "I have completed 2/4 steps of the task. I have navigated to Google.com and searched for 'browser automation using AI'. Now I can see the search results with various relevant links like axiom.ai, Skyvern-AI/skyvern on GitHub, and 'The Ultimate Guide to AI-Powered Browser Automation' on Hugging Face. Next, I need to click on one of these relevant results and then scroll down to read more.",
    "next_goal": "Click on a relevant result about AI and browser automation"
  },
  "action": [
    {
      "click_element": {
        "index": 28
      }
    }
  ]
}